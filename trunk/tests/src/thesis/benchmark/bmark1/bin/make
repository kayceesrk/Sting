#!/bin/bash

##
# Run from the sessionj root directory:
# tests/src/thesis/benchmark/bmark1/bin/make LOCALHOST ALL 
##


##
# Script configuration parameters (global variables).
##
java=                     # We're using sessionjc, so need java (not javac); set by parseArgs
compiler=bin/sessionjc    # Compiler
classpath=tests/classes   # Classpath
destination=tests/classes # Output directory


##
# Compile source file.
##
compile()
{
  echo Compiling: $1
  $compiler -J $java -cp $classpath $1 -d $destination
  if [ $? -ne 0 ]; then exit 1; fi # Can replace with the script exit-on-error flag
}


##
# Command line arguments.
##
parseArgs()
{
	# These are global variables accessed from main.
	flag=$1
	base=false    # Base/shared
	rmi=false     # RMI
	sj=false      # SJ
	socket=false  # "Plain" sockets
	
	if [ "$flag" == "LOCALHOST" ];
	then
	  java=java
	elif [ "$flag" == "DOC" ];
	then
	  java=java
	elif [ "$flag" == "CAMELOT" ];
	then
	  java=~/bin/jdk1.6.0_21-64/bin/java  
	else
	  echo Invalid environment: $1
	exit 1
	fi
	
	shift
	
	while true;
	do
	  case $1 in
	    "")
	      break
	      ;;
	    ALL) 
	      base=true
	      rmi=true
	      sj=true
	      socket=true
	      break
	      ;;
	    BASE)
	      base=true
	      shift
	      ;;       
	    RMI) 
	      rmi=true
	      shift
	      ;;      
	    SJ)
	      sj=true
	      shift
	      ;;
	    SOCKET)
	      socket=true
	      shift
	      ;;
	    *)
	      shift
	      ;;
	  esac
	done
}


##
# Main.
##
main() 
{
	parseArgs $*

	echo Parameters: compiler=$compiler, java=$java, classpath=$classpath, destination=$destination 
	
	if [ "$base" == "true" ];
	then  
	  tests/src/thesis/benchmark/bin/make $flag BASE
	fi
	
	if [ "$rmi" == "true" ];
	then  
	  local path=tests/src/thesis/benchmark/bmark1/rmi  
	  for f in RMIServer RMIClient RMIServerImpl; do
	    compile $path/$f.sj
	  done
	fi
	
	if [ "$sj" == "true" ];
	then  
	  local path=tests/src/thesis/benchmark/bmark1/sj  
	  for f in SJServer SJClient; do
	    compile $path/$f.sj
	  done
	fi
	
	if [ "$socket" == "true" ];
	then  
	  local path=tests/src/thesis/benchmark/bmark1/socket  
	  for f in StreamServer StreamClient ManualServer ManualClient; do
	    compile $path/$f.sj
	  done
	fi
	
	if [ "$base" == "true" ];
	then  
	  local path=tests/src/thesis/benchmark/bmark1  
	  for f in ServerRunner; do
	    compile $path/$f.sj
	  done
	fi  
}


##
# Call the main function.
##  
main $*
